// <auto-generated />
using LostandFoundAnimals.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace LostandFoundAnimals.Migrations
{
    [DbContext(typeof(LostandFoundAnimalsContext))]
    [Migration("20180718190831_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452");

            modelBuilder.Entity("LostandFoundAnimals.Models.Address", b =>
                {
                    b.Property<int>("AddressID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("City");

                    b.Property<string>("Line1");

                    b.Property<string>("Line2");

                    b.Property<string>("Line3");

                    b.Property<string>("OtherAddressDetails");

                    b.Property<string>("StateProvinceCounty");

                    b.Property<string>("ZipOrPostcode");

                    b.HasKey("AddressID");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("LostandFoundAnimals.Models.Animal", b =>
                {
                    b.Property<int>("AnimalID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Gender");

                    b.Property<byte[]>("Image");

                    b.Property<int>("PostID");

                    b.HasKey("AnimalID");

                    b.HasIndex("PostID")
                        .IsUnique();

                    b.ToTable("Animal");
                });

            modelBuilder.Entity("LostandFoundAnimals.Models.Breed", b =>
                {
                    b.Property<int>("BreedID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AnimalID");

                    b.Property<string>("BreedName");

                    b.HasKey("BreedID");

                    b.HasIndex("AnimalID");

                    b.ToTable("Breed");
                });

            modelBuilder.Entity("LostandFoundAnimals.Models.Post", b =>
                {
                    b.Property<int>("PostID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AddressID");

                    b.Property<DateTime>("Date");

                    b.Property<string>("LostOrFound");

                    b.Property<string>("PostText");

                    b.Property<bool>("Resolved");

                    b.HasKey("PostID");

                    b.HasIndex("AddressID");

                    b.ToTable("Post");
                });

            modelBuilder.Entity("LostandFoundAnimals.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("EmailAddress");

                    b.Property<string>("UserName");

                    b.HasKey("UserID");

                    b.ToTable("User");
                });

            modelBuilder.Entity("LostandFoundAnimals.Models.Animal", b =>
                {
                    b.HasOne("LostandFoundAnimals.Models.Post", "Post")
                        .WithOne("Animal")
                        .HasForeignKey("LostandFoundAnimals.Models.Animal", "PostID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("LostandFoundAnimals.Models.Breed", b =>
                {
                    b.HasOne("LostandFoundAnimals.Models.Animal")
                        .WithMany("Breeds")
                        .HasForeignKey("AnimalID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("LostandFoundAnimals.Models.Post", b =>
                {
                    b.HasOne("LostandFoundAnimals.Models.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
